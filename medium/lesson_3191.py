class Solution:
    '''
    Описание задачи: Вам дан бинарный массив nums, состоящий только из 0 и 1. Вы можете выполнять следующую операцию любое количество раз (возможно, ноль):

    Выберите любые 3 последовательных элемента массива и инвертируйте их.
    Инвертирование элемента означает изменение его значения с 0 на 1 и с 1 на 0.

    Необходимо вернуть минимальное количество операций, требуемых для того, чтобы все элементы в массиве nums стали равны 1. Если это невозможно, вернуть -1.

    Примеры:

    Пример 1:

    Вход: nums = [0,1,1,1,0,0]
    Выход: 3
    Объяснение:
    Выбираем элементы с индексами 0, 1 и 2. Результирующий массив: [1,0,0,1,0,0].
    Выбираем элементы с индексами 1, 2 и 3. Результирующий массив: [1,1,1,0,0,0].
    Выбираем элементы с индексами 3, 4 и 5. Результирующий массив: [1,1,1,1,1,1].
    Пример 2:

    Вход: nums = [0,1,1,1]
    Выход: -1
    Объяснение: Невозможно сделать все элементы равными 1.

    '''
    def minOperations(self, nums: list[int]) -> int:
        res = 0
        for i in range(len(nums) - 2):
            if nums[i] == 0:
                nums[i] = 1
                nums[i + 1] = 0 if nums[i + 1] == 1 else 1
                nums[i + 2] = 0 if nums[i + 2] == 1 else 1
                res += 1

        if not all(nums):
            return - 1
        return res



print(Solution().minOperations([0,1,1,1,0,0]))
print(Solution().minOperations([0,1,1,1]))
