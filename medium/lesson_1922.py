class Solution:
    '''
    Цифровая строка считается хорошей, если:

    Цифры на чётных позициях (индексация с нуля: 0, 2, 4...) — чётные (0, 2, 4, 6, 8).
    Цифры на нечётных позициях (1, 3, 5...) — простые числа среди цифр (2, 3, 5, 7).
    Например:

    Строка "2582" — хорошая, потому что:
    2 (позиция 0) — чётная
    5 (позиция 1) — простая
    8 (позиция 2) — чётная
    2 (позиция 3) — простая
    Строка "3245" — не хорошая, потому что:
    3 на позиции 0 — не чётная, а должна быть чётной
    🔢 Вход:
    Целое число n — длина строки.

    🎯 Задача:
    Найти общее количество "хороших" цифровых строк длины n.

    Ответ может быть очень большим, поэтому нужно вернуть его по модулю 10⁹ + 7 (то есть 1000000007).
    Пример:
    Вход: n = 2
    Выход: 20

    Пояснение:
    - Позиция 0 (чётная) → 5 вариантов (0, 2, 4, 6, 8)
    - Позиция 1 (нечётная) → 4 варианта (2, 3, 5, 7)

    Итог: 5 * 4 = 20
    '''
    def countGoodNumbers(self, n: int) -> int:
        MOD = 10 ** 9 + 7
        even_numbers = n // 2 if n % 2 == 0 else (n // 2) + 1
        easy_numbers = n // 2 if n % 2 == 0 else even_numbers - 1
        return pow(5, even_numbers, MOD)*pow(4, easy_numbers, MOD) % MOD




sol = Solution()

for i in range(1, 10):
    print(sol.countGoodNumbers(i))



# num = 4
#
# let1 = 5
# inc = 4
# for i in range(num - 1):
#     let1 *= inc
#     print(f'let1 = {let1}')
#     inc = 5 if inc == 4 else 4
# print(f'---- {let1}')