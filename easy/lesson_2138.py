class Solution:
    '''
    Дана строка s, целое число k (размер группы) и символ fill.

    Нужно разбить строку s на группы длины k следующим образом:

    Первая группа состоит из первых k символов строки, вторая — из следующих k, и так далее.
    Каждый символ строки входит ровно в одну группу.
    Если для последней группы в строке не хватает символов (то есть осталось меньше k символов),
    используются символы fill, чтобы дополнить группу до длины k.
    При этом гарантируется, что если из последней группы убрать добавленные символы fill и соединить
    все группы подряд (после удаления), получится исходная строка s.
    Вернуть массив строк — список групп.

    Пояснение

    Разбиение идёт строго по k символов за раз.
    Для последней группы, если осталось r < k символов, мы добавляем (k - r) символов fill в конец этой группы.
    Группы возвращаются в порядке следования в строке.
    Примеры

    Пример 1
    Вход:
    s = "abcdefghij", k = 3, fill = "x"

    Разбиение:
    - Первая группа: "abc"
    - Вторая: "def"
    - Третья: "ghi"
    - Четвёртая: остаются "j" → дополняем до длины 3 символом "x": "jxx"

    Выход:
    ["abc", "def", "ghi", "jxx"]
    '''
    def divideString(self, s: str, k: int, fill: str) -> list[str]:
        left,right = 0,1
        res = []
        for i in range(len(s)):
            if k == 1:
                res.append(s[left])
                left += 1
                continue
            elif right % k == 0:
                res.append(s[left:right])
                left = right
                right = left + 1
            right += 1
        else:
            res.append(s[left:])
            res = [item for item in res if item]
            res[-1] += fill * (k - len(res[-1]))
        return res

sol = Solution()

print(sol.divideString(s = "abcdefghi", k = 3, fill = "x"))
print(f'----')
print(sol.divideString("hjefcvizjkecrioqhywe", 1, 's'))
#

