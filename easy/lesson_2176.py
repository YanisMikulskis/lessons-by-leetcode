from collections import Counter
class Solution:
    '''
    –î–∞–Ω —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ nums –¥–ª–∏–Ω—ã n (–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω—É–ª—è) –∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ k.

    –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –∏–Ω–¥–µ–∫—Å–æ–≤ (i, j), —Ç–∞–∫–∏—Ö —á—Ç–æ:

    0 <= i < j < n
    nums[i] == nums[j] (–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —ç—Ç–∏—Ö –ø–æ–∑–∏—Ü–∏—è—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ)
    (i * j) % k == 0 (–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ k –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞)
    üî¢ –ü—Ä–∏–º–µ—Ä—ã:

    ‚ñ∂ –ü—Ä–∏–º–µ—Ä 1:
    –í—Ö–æ–¥: nums = [3, 1, 2, 2, 2, 1, 3], k = 2
    –í—ã—Ö–æ–¥: 4
    ‚úÖ –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–∞—Ä—ã:

    (0, 6) ‚Üí nums[0] == nums[6] == 3, –∏ 0 * 6 = 0, –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2
    (2, 3) ‚Üí nums[2] == nums[3] == 2, –∏ 2 * 3 = 6, –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2
    (2, 4) ‚Üí nums[2] == nums[4] == 2, –∏ 2 * 4 = 8, –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2
    (3, 4) ‚Üí nums[3] == nums[4] == 2, –∏ 3 * 4 = 12, –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2
    '''
    def countPairs(self, nums: list[int], k: int) -> int:
        if max(Counter(nums).values()) == 1:
            return 0
        couples = 0

        for i in range(len(nums) - 1):
            for j in range(i + 1, len(nums)):
                if nums[i] == nums[j] and (i * j) % 2 == 0:
                    couples += 1
        return couples


        # nums = list(enumerate(nums))

        # temp_dict = {
        #
        # }
        # for i in range(len(nums)):
        #     if nums[i] not in temp_dict:
        #         temp_dict.setdefault(nums[i], [i])
        #
        # print(nums)

        # left, right = 0, 1
        # cow = 0
        # while left != len(nums) - 2:
        #     if right == len(nums):
        #         left += 1
        #         right = left + 1
        #     if nums[left] == nums[right] and (left * right) % k == 0:
        #         cow += 1
        #     right += 1
        # else:
        #     if len(nums) == 2 and len(set(nums)) == 1:
        #         return 1
        # return cow




sol = Solution()
print(sol.countPairs(nums = [3, 1, 2, 2, 2, 1, 3], k = 2))
print(sol.countPairs([7,7], 7))
# sol.countPairs(nums = [1, 2, 3, 4], k = 1)